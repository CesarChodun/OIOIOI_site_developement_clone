[supervisord]
logfile={{ PROJECT_DIR }}/logs/supervisor.log
pidfile={{ PROJECT_DIR }}/pidfiles/supervisor.pid
childlogdir={{ PROJECT_DIR }}/logs
user=__USER__
directory={{ PROJECT_DIR }}
identifier=oioioi-supervisor

[program:uwsgi]
{% if settings.UWSGI_USE_GEVENT %}
command=uwsgi -s {{ PROJECT_DIR }}/uwsgi.sock --umask=000 --loop=gevent --async=50 --processes=10 -M --max-requests=5000 --disable-logging --need-app --enable-threads --socket-timeout=30 --wsgi-file={{ PROJECT_DIR }}/wsgi.py
{% else %}
command=uwsgi -s {{ PROJECT_DIR }}/uwsgi.sock --umask=000 --processes=10 -M --max-requests=5000 --disable-logging --need-app --enable-threads --socket-timeout=30 --wsgi-file={{ PROJECT_DIR }}/wsgi.py
{% endif %}
stopsignal=INT
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/uwsgi.log
{% if settings.UWSGI_ENABLED == False %}exclude=true{% elif settings.UWSGI_ENABLED == 'auto' and settings.DEBUG %}exclude=true{% endif %}

[program:celerycam]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celerycam --pidfile={{ PROJECT_DIR }}/pidfiles/celerycam.pid
startretries=0
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/celerycam.log

[program:evalmgr]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q evalmgr -c {{ settings.EVALMGR_CONCURRENCY }}
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/evalmgr.log

[program:evalmgr-lowprio]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q evalmgr-lowprio -c {{ settings.EVALMGR_CONCURRENCY }}
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/evalmgr-lowprio.log
{% if not settings.SPLITEVAL_EVALMGR %}exclude=true{% endif %}

[program:sioworkers]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py celeryd -E -l info -Q sioworkers -c 1
startretries=0
stopwaitsecs=15
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/sioworkers.log
{% if not settings.RUN_LOCAL_WORKERS %}exclude=true{% endif %}

[program:filetracker-server]
command=filetracker-server -L /dev/stderr -d {{ settings.MEDIA_ROOT }} -l {{ settings.FILETRACKER_LISTEN_ADDR }} -p {{ settings.FILETRACKER_LISTEN_PORT }} -D
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/filetracker.log
{% if not settings.FILETRACKER_SERVER_ENABLED %}exclude=true{% endif %}

[program:zeus-fetcher]
command={{ PYTHON }} {{ PROJECT_DIR }}/manage.py zeus_fetcher
redirect_stderr=true
stdout_logfile={{ PROJECT_DIR }}/logs/zeus-fetcher.log
{% if not settings.ZEUS_INSTANCES %}exclude=true{% endif %}

[program:notifications-server]
command={{ NODE }} {{ PROJECT_DIR }}/oioioi/notifications/server/ns-main.js

[program:autoreload]
# Comment this out to enable auto-reloading when code changes.
exclude=true
